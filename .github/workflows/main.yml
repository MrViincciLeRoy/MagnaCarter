name: Alpaca Trading System

on:
  # Manual trigger with input options
  workflow_dispatch:
    inputs:
      mode:
        description: 'Operation mode'
        required: true
        default: 'backtest'
        type: choice
        options:
          - backtest
          - live
          - multi
      symbol:
        description: 'Trading symbol'
        required: false
        default: 'BTC/USD'
        type: string
      paper_trading:
        description: 'Use paper trading'
        required: false
        default: true
        type: boolean
  
  # Scheduled runs (optional - runs backtest daily at 6 AM UTC)
  schedule:
    - cron: '0 6 * * *'
  
  # Trigger on push to main branch (optional)
  push:
    branches: [ main ]
    paths: 
      - 'backtest.py'
      - '**.py'

jobs:
  run-trading-system:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          # Install common trading dependencies if no requirements.txt
          pip install alpaca-py pandas numpy matplotlib yfinance ta-lib
        fi
    
    - name: Set environment variables
      env:
        ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
        ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
        ALPACA_BASE_URL: ${{ secrets.ALPACA_BASE_URL }}
      run: |
        echo "ALPACA_API_KEY=$ALPACA_API_KEY" >> $GITHUB_ENV
        echo "ALPACA_SECRET_KEY=$ALPACA_SECRET_KEY" >> $GITHUB_ENV
        echo "ALPACA_BASE_URL=$ALPACA_BASE_URL" >> $GITHUB_ENV
    
    - name: Run backtest (scheduled/push)
      if: github.event_name == 'schedule' || github.event_name == 'push'
      run: |
        python backtest.py --mode backtest --symbol "BTC/USD" --paper
    
    - name: Run backtest (manual - backtest mode)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'backtest'
      run: |
        python backtest.py \
          --mode backtest \
          --symbol "${{ github.event.inputs.symbol }}" \
          ${{ github.event.inputs.paper_trading == 'true' && '--paper' || '' }}
    
    - name: Run live trading (manual - live mode)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'live'
      run: |
        python backtest.py \
          --mode live \
          --symbol "${{ github.event.inputs.symbol }}" \
          ${{ github.event.inputs.paper_trading == 'true' && '--paper' || '' }}
    
    - name: Run multi-symbol trading (manual - multi mode)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'multi'
      run: |
        python backtest.py \
          --mode multi \
          --symbol "${{ github.event.inputs.symbol }}" \
          ${{ github.event.inputs.paper_trading == 'true' && '--paper' || '' }}
    
    - name: Upload backtest results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: backtest-results-${{ github.run_number }}
        path: |
          *.png
          *.csv
          *.log
          results/
        retention-days: 30
    
    - name: Create summary
      if: always()
      run: |
        echo "## Trading System Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Mode**: ${{ github.event.inputs.mode || 'backtest' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Symbol**: ${{ github.event.inputs.symbol || 'BTC/USD' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Paper Trading**: ${{ github.event.inputs.paper_trading || 'true' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "backtest_results.log" ]; then
          echo "### Latest Log Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -20 backtest_results.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
